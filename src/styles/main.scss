@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
*,
*::before,
*::after {
  box-sizing: border-box;
}
$primary-color: #2fa8cc;
$secondary-color: #f4f4f4;
$box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.1);



body {
  background-color: $primary-color;
  font-family: 'Roboto', sans-serif;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
  margin: 0;
  padding: 20px;
}

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: $secondary-color;
  border-radius: 10px;
  box-shadow: $box-shadow;
  padding: 30px 20px;
  text-align: center;
  max-width: 100%;
  width: 800px;
  min-height: 500px;
  transition: all 0.3s ease-in-out;
  border: 2px solid rgb(75 240 249 / 0%);
  &:hover {
    box-shadow: 0px 1px 20px 5px rgb(191 253 252 / 70%);
    border: 2px solid rgb(75 240 249);
  }
}

h3 {
  margin: 0;
  opacity: 0.5;
  letter-spacing: 2px;
}

img {
position: relative;
  margin-bottom: 20px;
  border-radius: 10px;

}



.joke {
  font-size: 30px;
  letter-spacing: 1px;
  line-height: 40px;
  margin: 50px auto;
  max-width: 600px;

}

.btn {
  background-color: $primary-color;
  color: $secondary-color;
  border: 0;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.1);
  padding: 15px 10px;
  font-size: 16px;
  cursor: pointer;

  &:active {
    transform: scale(0.98);
  }

  &:focus {
    outline: 0;
  }
}

.rainbow {
  --border-size: 0.3rem;
  border: var(--border-size) solid transparent;

  /* Paint an image in the border */
  border-image: conic-gradient(
                  from var(--angle),
                  #d53e33 0deg 90deg,
                  #fbb300 90deg 180deg,
                  #377af5 180deg 270deg,
                  #399953 270deg 360deg
  )
  1 stretch;
  background: rgb(255 255 255 / var(--opacity));
}


/* Animate when Houdini is available */
@supports (background: paint(houdini)) {
  @property --opacity {
    syntax: "<number>";
    initial-value: 0.5;
    inherits: false;
  }

  @property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  @keyframes opacityChange {
    to {
      --opacity: 1;
    }
  }

  @keyframes rotate {
    to {
      --angle: 360deg;
    }
  }

  img {
    animation: rotate 4s linear infinite, opacityChange 3s infinite alternate;
  }


}




